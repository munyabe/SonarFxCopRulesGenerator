<?xml version="1.0" encoding="utf-8"?>
<rules>
  <rule key="PagesViewStateEncryptionModeShouldBeAlways">
    <name>PagesViewStateEncryptionModeShouldBeAlways</name>
    <configKey><![CDATA[PagesViewStateEncryptionModeShouldBeAlways@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verify that the viewstate encryption mode is not configured to never encrypt.<br/>
<a href="http://msdn.microsoft.com/en-us/library/950xf363.aspx">MSDN help page of rule CA5418</a>
]]></description>
  </rule>
  <rule key="FormAuthenticationShouldNotContainFormAuthenticationCredentials">
    <name>FormAuthenticationShouldNotContainFormAuthenticationCredentials</name>
    <configKey><![CDATA[FormAuthenticationShouldNotContainFormAuthenticationCredentials@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that no credentials are specified under the form authentication configuration.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/ms998367.aspx">MSDN help page of rule CA5402</a>
]]></description>
  </rule>
  <rule key="HttpRuntimeEnableHeaderCheckingShouldBeTrue">
    <name>HttpRuntimeEnableHeaderCheckingShouldBeTrue</name>
    <configKey><![CDATA[HttpRuntimeEnableHeaderCheckingShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.httpRuntime enableHeaderChecking attribute is set to true. From http://msdn.microsoft.com/en-us/library/e1f13641.aspx. The setting indicates whether ASP.NET should check the request header for potential injection attacks. If an attack is detected, ASP.NET responds with an error. This forces ASP.NET to apply the ValidateRequest protection to headers sent by the client. If an attack is detected the application throws HttpRequestValidationException.<br/>
<a href="http://msdn.microsoft.com/en-us/library/e1f13641.aspx">MSDN help page of rule CA5416</a>
]]></description>
  </rule>
  <rule key="PagesValidateRequestShouldBeEnabled">
    <name>PagesValidateRequestShouldBeEnabled</name>
    <configKey><![CDATA[PagesValidateRequestShouldBeEnabled@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verify that validateRequest is enabled.<br/>
<a href="http://msdn.microsoft.com/en-us/library/950xf363.aspx">MSDN help page of rule CA5417</a>
]]></description>
  </rule>
  <rule key="CustomErrorsModeShouldBeOn">
    <name>CustomErrorsModeShouldBeOn</name>
    <configKey><![CDATA[CustomErrorsModeShouldBeOn@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.customErrors mode is set to On or RemoteOnly. This disable detailed error message returned by ASP.NET to remote users.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/h0hfz6fc(vs.71).aspx">MSDN help page of rule CA5419</a>
]]></description>
  </rule>
  <rule key="DebugCompilationMustBeDisabled">
    <name>DebugCompilationMustBeDisabled</name>
    <configKey><![CDATA[DebugCompilationMustBeDisabled@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verifies that debug compilation is turned off. This eliminates potential performance and security issues related to debug code enabled and additional extensive error messages being returned.<br/><br/>
For reference, rule ID is CA5400]]></description>
  </rule>
  <rule key="PagesEnableViewStateMacShouldBeTrue">
    <name>PagesEnableViewStateMacShouldBeTrue</name>
    <configKey><![CDATA[PagesEnableViewStateMacShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verifies that the viewstate mac is enabled.<br/>
<a href="http://msdn.microsoft.com/en-us/library/950xf363.aspx">MSDN help page of rule CA5414</a>
]]></description>
  </rule>
  <rule key="HttpCookiesHttpOnlyCookiesShouldBeTrue">
    <name>HttpCookiesHttpOnlyCookiesShouldBeTrue</name>
    <configKey><![CDATA[HttpCookiesHttpOnlyCookiesShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.httpCookies httpOnlyCookies configuration is set to True which force all cookies to be sent with the HttpOnly attribute.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/ms228262.aspx">MSDN help page of rule CA5407</a>
]]></description>
  </rule>
  <rule key="AnonymousAccessIsEnabled">
    <name>AnonymousAccessIsEnabled</name>
    <configKey><![CDATA[AnonymousAccessIsEnabled@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Looks in the web.config file to see if the authorization section allows anonymous access.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/ms998367.aspx">MSDN help page of rule CA5410</a>
]]></description>
  </rule>
  <rule key="EnableCrossAppRedirectsShouldBeTrue">
    <name>EnableCrossAppRedirectsShouldBeTrue</name>
    <configKey><![CDATA[EnableCrossAppRedirectsShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.authentication.forms enableCrossAppRedirects is set to true. The settings indicate if the user should be redirected to another application url after the authentication process. If the setting is false, the authentication process will not allow redirection to another application or host. This helps prevent an attacker to force the user to be redirected to another site during the authentication process. This attack is commonly called Open redirect and is used mostly during phishing attacks.<br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.formsauthentication.enablecrossappredirects.aspx">MSDN help page of rule CA5403</a>
]]></description>
  </rule>
  <rule key="FormAuthenticationSlidingExpirationShouldBeFalse">
    <name>FormAuthenticationSlidingExpirationShouldBeFalse</name>
    <configKey><![CDATA[FormAuthenticationSlidingExpirationShouldBeFalse@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that if the system.web.authentication.forms slidingExpiration be set to false when the site is being serviced over HTTP. This will force the authentication cookie to have a fix timeout value instead of being refreshed by each request. Since the cookie will traverse over clear text network and can be sniffed, having a fix timeout value on the cookie will limit the amount of time the cookie can be replayed. If the cookie is traversing over HTTPS, it is less likely to be intercepted and having the slidingExpiration setting to True will cause the timeout to be refreshed after each request which gives a better user experience.<br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.formsauthentication.requiressl.aspx">MSDN help page of rule CA5406</a>
]]></description>
  </rule>
  <rule key="RoleManagerCookieProtectionShouldBeAll">
    <name>RoleManagerCookieProtectionShouldBeAll</name>
    <configKey><![CDATA[RoleManagerCookieProtectionShouldBeAll@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.rolemanager cookieProtection is set to All which enforce both the cookie to be encrypted and validated by the server.<br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.roles.cookieprotectionvalue.aspx">MSDN help page of rule CA5411</a>
]]></description>
  </rule>
  <rule key="FormAuthenticationProtectionShouldBeAll">
    <name>FormAuthenticationProtectionShouldBeAll</name>
    <configKey><![CDATA[FormAuthenticationProtectionShouldBeAll@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the protection attribute on the system.web.authentication.forms protection is set to All which specifies that the application use both data validation and encryption to help protect the authentication cookie.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/ms998367.aspx">MSDN help page of rule CA5404</a>
]]></description>
  </rule>
  <rule key="CustomErrorPageShouldBeSpecified">
    <name>CustomErrorPageShouldBeSpecified</name>
    <configKey><![CDATA[CustomErrorPageShouldBeSpecified@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verifies that the CustomErrors section is configured to have a default url for redirecting uses in case of error.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/h0hfz6fc(vs.71).aspx">MSDN help page of rule CA5401</a>
]]></description>
  </rule>
  <rule key="FormAuthenticationRequireSSLShouldBeTrue">
    <name>FormAuthenticationRequireSSLShouldBeTrue</name>
    <configKey><![CDATA[FormAuthenticationRequireSSLShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the requireSSL attribute on the system.web.authentication.forms configuration element is set to True which force the authentication cookie to specify the secure attribute. This indicates the browser to only provide the cookie over SSL.<br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.formsauthentication.requiressl.aspx">MSDN help page of rule CA5405</a>
]]></description>
  </rule>
  <rule key="HttpCookiesRequireSSLShouldBeTrue">
    <name>HttpCookiesRequireSSLShouldBeTrue</name>
    <configKey><![CDATA[HttpCookiesRequireSSLShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.httpCookies requireSSL configuration is set to True which force all cookies to be sent with the secure attribute. This indicates the browser to only provide the cookie over SSL.<br/>
<a href="http://msdn2.microsoft.com/en-us/library/ms228262.aspx">MSDN help page of rule CA5408</a>
]]></description>
  </rule>
  <rule key="TraceShouldBeDisabled">
    <name>TraceShouldBeDisabled</name>
    <configKey><![CDATA[TraceShouldBeDisabled@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.trace enabled setting is set to false which disable tracing. It is recommended to disable tracing on production servers to make sure that an attacker cannot gain information from the trace about your application. Trace information can help an attacker probe and compromise your application.<br/>
<a href="http://msdn.microsoft.com/en-us/library/6915t83k.aspx">MSDN help page of rule CA5409</a>
]]></description>
  </rule>
  <rule key="RoleManagerCookieRequireSSLShouldBeTrue">
    <name>RoleManagerCookieRequireSSLShouldBeTrue</name>
    <configKey><![CDATA[RoleManagerCookieRequireSSLShouldBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[The rule verifies that the system.web.rolemanager cookieRequireSSL attribute is set to True which force the role manager cookie to specify the secure attribute. This indicates the browser to only provide the cookie over SSL.<br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.roles.cookierequiressl.aspx">MSDN help page of rule CA5412</a>
]]></description>
  </rule>
  <rule key="RoleManagerCookieSlidingExpirationShouldBeFalse">
    <name>RoleManagerCookieSlidingExpirationShouldBeTrue</name>
    <configKey><![CDATA[RoleManagerCookieSlidingExpirationShouldBeFalse@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[
      The rule verifies that if the system.web.rolemanager cookieSlidingExpiration is set to false when the site is being serviced over HTTP. This will force the authentication cookie to have a fix timeout value instead of being refreshed by each request. Since the cookie will traverse over clear text network and can be sniffed, having a fix timeout value on the cookie will limit the amount of time the cookie can be replayed.
      If the cookie is traversing over HTTPS, it is less likely to be intercepted and having the cookieSlidingExpiration setting to True will cause the timeout to be refreshed after each request which gives a better user experience.
    <br/>
<a href="http://msdn.microsoft.com/en-us/library/system.web.security.roles.cookieslidingexpiration.aspx">MSDN help page of rule CA5413</a>
]]></description>
  </rule>
  <rule key="PagesEnableEventValidationMustBeTrue">
    <name>PagesEnableEventValidationMustBeTrue</name>
    <configKey><![CDATA[PagesEnableEventValidationMustBeTrue@$(FxCopDir)\Rules\AspNetConfigurationSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security.Configuration" />
    <description><![CDATA[Verify if event validation is enabled.<br/>
<a href="http://msdn.microsoft.com/en-us/library/950xf363.aspx">MSDN help page of rule CA5415</a>
]]></description>
  </rule>
  <rule key="MarkVerbHandlersWithValidateAntiforgeryToken">
    <name>MarkVerbHandlersWithValidateAntiforgeryToken</name>
    <configKey><![CDATA[MarkVerbHandlersWithValidateAntiforgeryToken@$(FxCopDir)\Rules\AspNetMvcSecurityRules.dll]]></configKey>
    <category name="ASP.NET.MVC.Security" />
    <description><![CDATA[Rule that verifies that if the ValidateAntiforgeryTokenAttribute is used to protect against Potential CSRF attack in MVC.<br/><br/>
For reference, rule ID is CA5332]]></description>
  </rule>
  <rule key="ControllerActionShouldValidateInput">
    <name>ControllerActionShouldValidateInput</name>
    <configKey><![CDATA[ControllerActionShouldValidateInput@$(FxCopDir)\Rules\AspNetMvcSecurityRules.dll]]></configKey>
    <category name="ASP.NET.MVC.Security" />
    <description><![CDATA[Verifies if the ValidateInputAttribute is used properly to protect against XSS attacks.<br/><br/>
For reference, rule ID is CA5333]]></description>
  </rule>
  <rule key="EnableEventValidationShouldBeTrue">
    <name>EnableEventValidationShouldBeTrue</name>
    <configKey><![CDATA[EnableEventValidationShouldBeTrue@$(FxCopDir)\Rules\AspNetSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security" />
    <description><![CDATA[Rule that will identify if the EnableEventValidation is disabled on a certain page.<br/><br/>
For reference, rule ID is CA5327]]></description>
  </rule>
  <rule key="ViewStateEncryptionModeShouldBeAlways">
    <name>ViewStateEncryptionModeShouldBeAlways</name>
    <configKey><![CDATA[ViewStateEncryptionModeShouldBeAlways@$(FxCopDir)\Rules\AspNetSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security" />
    <description><![CDATA[Rule that will identify if the ViewStateEncryptionMode is not set to Never on a certain page.<br/><br/>
For reference, rule ID is CA5329]]></description>
  </rule>
  <rule key="ValidateRequestShouldBeEnabled">
    <name>ValidateRequestShouldBeEnabled</name>
    <configKey><![CDATA[ValidateRequestShouldBeEnabled@$(FxCopDir)\Rules\AspNetSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security" />
    <description><![CDATA[Rule that will identify if the ValidateRequest is disabled on a certain page.<br/><br/>
For reference, rule ID is CA5328]]></description>
  </rule>
  <rule key="EnableViewStateMacShouldBeTrue">
    <name>EnableViewStateMacShouldBeTrue</name>
    <configKey><![CDATA[EnableViewStateMacShouldBeTrue@$(FxCopDir)\Rules\AspNetSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security" />
    <description><![CDATA[Rule that will identify if the EnableViewStateMac is not set to false on a certain page.<br/><br/>
For reference, rule ID is CA5330]]></description>
  </rule>
  <rule key="ViewStateUserKeyShouldBeSet">
    <name>ViewStateUserKeyShouldBeSet</name>
    <configKey><![CDATA[ViewStateUserKeyShouldBeSet@$(FxCopDir)\Rules\AspNetSecurityRules.dll]]></configKey>
    <category name="ASP.NET.Security" />
    <description><![CDATA[Verifies if the ViewStateEncryptionMode directive is not set to Never  on a certain page.<br/><br/>
For reference, rule ID is CA5332]]></description>
  </rule>
</rules>